#!/bin/bash

CWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
REGISTRY=shadowhq
NAME=shadow-kafka
IMAGE=$REGISTRY/$NAME

function ensure_ip() {
    if [ "$IP" == "" ]; then
       echo "Error: please specify an ip address"
       exit 1
    fi
}

##############################################################################################

COMMAND=$1
IP=$2

# ./container run
if [ "$COMMAND" == "run" ]; then
    ensure_ip
    docker rm -f $NAME
    docker run -p 2181:2181 -p 9092:9092 --name $NAME --env ADVERTISED_HOST=$IP --env ADVERTISED_PORT=9092 $IMAGE

# ./container dev
elif [ "$COMMAND" == "dev" ]; then
    ensure_ip
    docker rm -f $NAME
    docker run \
           -v `pwd`/config/server.properties:/opt/kafka_2.10-0.8.2.1/config/server.properties \
           -v `pwd`:/host \
           -p 2181:2181 \
           -p 9092:9092 \
           --name $NAME \
           --env ADVERTISED_HOST=$IP \
           --env ADVERTISED_PORT=9092 \
           $IMAGE

# ./container shell
elif [ "$COMMAND" == "shell" ]; then
    ensure_ip
    docker rm -f $NAME
    docker run -it --entrypoint /bin/bash -p 2181:2181 -p 9092:9092 --name $NAME --env ADVERTISED_HOST=$IP --env ADVERTISED_PORT=9092 $IMAGE

# ./container attach
elif [ "$COMMAND" == "attach" ]; then
    docker exec -it $NAME bash

# ./container build
elif [ "$COMMAND" == "build" ]; then
    GIT_HASH=`git log -1 --pretty=format:"%H"`
    echo $GIT_HASH > version
    docker build -t $IMAGE .
    # docker tag -f $IMAGE:latest $IMAGE:$GIT_HASH

# ./container tail
elif [ "$COMMAND" == "tail" ]; then
    docker logs -f $NAME

# ./container producer
elif [ "$COMMAND" == "producer" ]; then
    ensure_ip
    KAFKA_SERVER=$IP make producer

# ./container consumer
elif [ "$COMMAND" == "consumer" ]; then
    ensure_ip
    KAFKA_SERVER=$IP make consumer

else
    echo "usage: $0 [command]"
    echo ""
    echo "  run        Run the docker image"
    echo "  dev        Run the docker image in dev mode (pwd is mounted as /host)"
    echo "  shell      Run the docker image, start bash"
    echo "  attach     Attach to running container (bash prompt)"
    echo "  tail       Tail container logs"
    echo "  consumer   Launch test consumer"
    echo "  producer   Launch test producer"
    echo ""
fi
